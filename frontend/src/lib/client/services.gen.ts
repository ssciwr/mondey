// This file is auto-generated by @hey-api/openapi-ts

import {
	createClient,
	createConfig,
	type Options,
	formDataBodySerializer,
	urlSearchParamsBodySerializer
} from '@hey-api/client-fetch';
import type {
	GetLanguagesLanguagesGetError,
	GetLanguagesLanguagesGetResponse,
	GetMilestonesMilestonesGetError,
	GetMilestonesMilestonesGetResponse,
	GetMilestoneMilestonesMilestoneIdGetData,
	GetMilestoneMilestonesMilestoneIdGetError,
	GetMilestoneMilestonesMilestoneIdGetResponse,
	GetMilestoneGroupsMilestoneGroupsGetError,
	GetMilestoneGroupsMilestoneGroupsGetResponse,
	GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetData,
	GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetError,
	GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetResponse,
	CreateLanguageAdminLanguagesPostData,
	CreateLanguageAdminLanguagesPostError,
	CreateLanguageAdminLanguagesPostResponse,
	DeleteLanguageAdminLanguagesLanguageIdDeleteData,
	DeleteLanguageAdminLanguagesLanguageIdDeleteError,
	DeleteLanguageAdminLanguagesLanguageIdDeleteResponse,
	GetMilestoneGroupsAdminMilestoneGroupsGetError,
	GetMilestoneGroupsAdminMilestoneGroupsGetResponse,
	CreateMilestoneGroupAdminMilestoneGroupsPostError,
	CreateMilestoneGroupAdminMilestoneGroupsPostResponse,
	UpdateMilestoneGroupAdminMilestoneGroupsPutData,
	UpdateMilestoneGroupAdminMilestoneGroupsPutError,
	UpdateMilestoneGroupAdminMilestoneGroupsPutResponse,
	DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteData,
	DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteError,
	DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteResponse,
	UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutData,
	UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutError,
	UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutResponse,
	CreateMilestoneAdminMilestonesMilestoneGroupIdPostData,
	CreateMilestoneAdminMilestonesMilestoneGroupIdPostError,
	CreateMilestoneAdminMilestonesMilestoneGroupIdPostResponse,
	UpdateMilestoneAdminMilestonesPutData,
	UpdateMilestoneAdminMilestonesPutError,
	UpdateMilestoneAdminMilestonesPutResponse,
	DeleteMilestoneAdminMilestonesMilestoneIdDeleteData,
	DeleteMilestoneAdminMilestonesMilestoneIdDeleteError,
	DeleteMilestoneAdminMilestonesMilestoneIdDeleteResponse,
	UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostData,
	UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostError,
	UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostResponse,
	UsersCurrentUserUsersMeGetError,
	UsersCurrentUserUsersMeGetResponse,
	UsersPatchCurrentUserUsersMePatchData,
	UsersPatchCurrentUserUsersMePatchError,
	UsersPatchCurrentUserUsersMePatchResponse,
	UsersUserUsersIdGetData,
	UsersUserUsersIdGetError,
	UsersUserUsersIdGetResponse,
	UsersPatchUserUsersIdPatchData,
	UsersPatchUserUsersIdPatchError,
	UsersPatchUserUsersIdPatchResponse,
	UsersDeleteUserUsersIdDeleteData,
	UsersDeleteUserUsersIdDeleteError,
	UsersDeleteUserUsersIdDeleteResponse,
	AuthCookieLoginAuthLoginPostData,
	AuthCookieLoginAuthLoginPostError,
	AuthCookieLoginAuthLoginPostResponse,
	AuthCookieLogoutAuthLogoutPostError,
	AuthCookieLogoutAuthLogoutPostResponse,
	RegisterRegisterAuthRegisterPostData,
	RegisterRegisterAuthRegisterPostError,
	RegisterRegisterAuthRegisterPostResponse,
	ResetForgotPasswordAuthForgotPasswordPostData,
	ResetForgotPasswordAuthForgotPasswordPostError,
	ResetForgotPasswordAuthForgotPasswordPostResponse,
	ResetResetPasswordAuthResetPasswordPostData,
	ResetResetPasswordAuthResetPasswordPostError,
	ResetResetPasswordAuthResetPasswordPostResponse,
	VerifyRequestTokenAuthRequestVerifyTokenPostData,
	VerifyRequestTokenAuthRequestVerifyTokenPostError,
	VerifyRequestTokenAuthRequestVerifyTokenPostResponse,
	VerifyVerifyAuthVerifyPostData,
	VerifyVerifyAuthVerifyPostError,
	VerifyVerifyAuthVerifyPostResponse,
	AuthResearchAuthGetError,
	AuthResearchAuthGetResponse
} from './types.gen';

export const client = createClient(createConfig());

/**
 * Get Languages
 */
export const getLanguagesLanguagesGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetLanguagesLanguagesGetResponse,
		GetLanguagesLanguagesGetError,
		ThrowOnError
	>({
		...options,
		url: '/languages/'
	});
};

/**
 * Get Milestones
 */
export const getMilestonesMilestonesGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetMilestonesMilestonesGetResponse,
		GetMilestonesMilestonesGetError,
		ThrowOnError
	>({
		...options,
		url: '/milestones/'
	});
};

/**
 * Get Milestone
 */
export const getMilestoneMilestonesMilestoneIdGet = <ThrowOnError extends boolean = false>(
	options: Options<GetMilestoneMilestonesMilestoneIdGetData, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetMilestoneMilestonesMilestoneIdGetResponse,
		GetMilestoneMilestonesMilestoneIdGetError,
		ThrowOnError
	>({
		...options,
		url: '/milestones/{milestone_id}'
	});
};

/**
 * Get Milestone Groups
 */
export const getMilestoneGroupsMilestoneGroupsGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetMilestoneGroupsMilestoneGroupsGetResponse,
		GetMilestoneGroupsMilestoneGroupsGetError,
		ThrowOnError
	>({
		...options,
		url: '/milestone-groups/'
	});
};

/**
 * Get Milestone Group
 */
export const getMilestoneGroupMilestoneGroupsMilestoneGroupIdGet = <
	ThrowOnError extends boolean = false
>(
	options: Options<GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetData, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetResponse,
		GetMilestoneGroupMilestoneGroupsMilestoneGroupIdGetError,
		ThrowOnError
	>({
		...options,
		url: '/milestone-groups/{milestone_group_id}'
	});
};

/**
 * Create Language
 */
export const createLanguageAdminLanguagesPost = <ThrowOnError extends boolean = false>(
	options: Options<CreateLanguageAdminLanguagesPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		CreateLanguageAdminLanguagesPostResponse,
		CreateLanguageAdminLanguagesPostError,
		ThrowOnError
	>({
		...options,
		url: '/admin/languages/'
	});
};

/**
 * Delete Language
 */
export const deleteLanguageAdminLanguagesLanguageIdDelete = <ThrowOnError extends boolean = false>(
	options: Options<DeleteLanguageAdminLanguagesLanguageIdDeleteData, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		DeleteLanguageAdminLanguagesLanguageIdDeleteResponse,
		DeleteLanguageAdminLanguagesLanguageIdDeleteError,
		ThrowOnError
	>({
		...options,
		url: '/admin/languages/{language_id}'
	});
};

/**
 * Get Milestone Groups
 */
export const getMilestoneGroupsAdminMilestoneGroupsGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetMilestoneGroupsAdminMilestoneGroupsGetResponse,
		GetMilestoneGroupsAdminMilestoneGroupsGetError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestone-groups/'
	});
};

/**
 * Create Milestone Group
 */
export const createMilestoneGroupAdminMilestoneGroupsPost = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		CreateMilestoneGroupAdminMilestoneGroupsPostResponse,
		CreateMilestoneGroupAdminMilestoneGroupsPostError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestone-groups/'
	});
};

/**
 * Update Milestone Group
 */
export const updateMilestoneGroupAdminMilestoneGroupsPut = <ThrowOnError extends boolean = false>(
	options: Options<UpdateMilestoneGroupAdminMilestoneGroupsPutData, ThrowOnError>
) => {
	return (options?.client ?? client).put<
		UpdateMilestoneGroupAdminMilestoneGroupsPutResponse,
		UpdateMilestoneGroupAdminMilestoneGroupsPutError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestone-groups'
	});
};

/**
 * Delete Milestone Group
 */
export const deleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDelete = <
	ThrowOnError extends boolean = false
>(
	options: Options<DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteData, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteResponse,
		DeleteMilestoneGroupAdminMilestoneGroupsMilestoneGroupIdDeleteError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestone-groups/{milestone_group_id}'
	});
};

/**
 * Upload Milestone Group Image
 */
export const uploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPut = <
	ThrowOnError extends boolean = false
>(
	options: Options<
		UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutData,
		ThrowOnError
	>
) => {
	return (options?.client ?? client).put<
		UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutResponse,
		UploadMilestoneGroupImageAdminMilestoneGroupImagesMilestoneGroupIdPutError,
		ThrowOnError
	>({
		...options,
		...formDataBodySerializer,
		headers: {
			'Content-Type': null,
			...options?.headers
		},
		url: '/admin/milestone-group-images/{milestone_group_id}'
	});
};

/**
 * Create Milestone
 */
export const createMilestoneAdminMilestonesMilestoneGroupIdPost = <
	ThrowOnError extends boolean = false
>(
	options: Options<CreateMilestoneAdminMilestonesMilestoneGroupIdPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		CreateMilestoneAdminMilestonesMilestoneGroupIdPostResponse,
		CreateMilestoneAdminMilestonesMilestoneGroupIdPostError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestones/{milestone_group_id}'
	});
};

/**
 * Update Milestone
 */
export const updateMilestoneAdminMilestonesPut = <ThrowOnError extends boolean = false>(
	options: Options<UpdateMilestoneAdminMilestonesPutData, ThrowOnError>
) => {
	return (options?.client ?? client).put<
		UpdateMilestoneAdminMilestonesPutResponse,
		UpdateMilestoneAdminMilestonesPutError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestones'
	});
};

/**
 * Delete Milestone
 */
export const deleteMilestoneAdminMilestonesMilestoneIdDelete = <
	ThrowOnError extends boolean = false
>(
	options: Options<DeleteMilestoneAdminMilestonesMilestoneIdDeleteData, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		DeleteMilestoneAdminMilestonesMilestoneIdDeleteResponse,
		DeleteMilestoneAdminMilestonesMilestoneIdDeleteError,
		ThrowOnError
	>({
		...options,
		url: '/admin/milestones/{milestone_id}'
	});
};

/**
 * Upload Milestone Image
 */
export const uploadMilestoneImageAdminMilestoneImagesMilestoneIdPost = <
	ThrowOnError extends boolean = false
>(
	options: Options<UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostResponse,
		UploadMilestoneImageAdminMilestoneImagesMilestoneIdPostError,
		ThrowOnError
	>({
		...options,
		...formDataBodySerializer,
		headers: {
			'Content-Type': null,
			...options?.headers
		},
		url: '/admin/milestone-images/{milestone_id}'
	});
};

/**
 * Users:Current User
 */
export const usersCurrentUserUsersMeGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		UsersCurrentUserUsersMeGetResponse,
		UsersCurrentUserUsersMeGetError,
		ThrowOnError
	>({
		...options,
		url: '/users/me'
	});
};

/**
 * Users:Patch Current User
 */
export const usersPatchCurrentUserUsersMePatch = <ThrowOnError extends boolean = false>(
	options: Options<UsersPatchCurrentUserUsersMePatchData, ThrowOnError>
) => {
	return (options?.client ?? client).patch<
		UsersPatchCurrentUserUsersMePatchResponse,
		UsersPatchCurrentUserUsersMePatchError,
		ThrowOnError
	>({
		...options,
		url: '/users/me'
	});
};

/**
 * Users:User
 */
export const usersUserUsersIdGet = <ThrowOnError extends boolean = false>(
	options: Options<UsersUserUsersIdGetData, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		UsersUserUsersIdGetResponse,
		UsersUserUsersIdGetError,
		ThrowOnError
	>({
		...options,
		url: '/users/{id}'
	});
};

/**
 * Users:Patch User
 */
export const usersPatchUserUsersIdPatch = <ThrowOnError extends boolean = false>(
	options: Options<UsersPatchUserUsersIdPatchData, ThrowOnError>
) => {
	return (options?.client ?? client).patch<
		UsersPatchUserUsersIdPatchResponse,
		UsersPatchUserUsersIdPatchError,
		ThrowOnError
	>({
		...options,
		url: '/users/{id}'
	});
};

/**
 * Users:Delete User
 */
export const usersDeleteUserUsersIdDelete = <ThrowOnError extends boolean = false>(
	options: Options<UsersDeleteUserUsersIdDeleteData, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		UsersDeleteUserUsersIdDeleteResponse,
		UsersDeleteUserUsersIdDeleteError,
		ThrowOnError
	>({
		...options,
		url: '/users/{id}'
	});
};

/**
 * Auth:Cookie.Login
 */
export const authCookieLoginAuthLoginPost = <ThrowOnError extends boolean = false>(
	options: Options<AuthCookieLoginAuthLoginPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		AuthCookieLoginAuthLoginPostResponse,
		AuthCookieLoginAuthLoginPostError,
		ThrowOnError
	>({
		...options,
		...urlSearchParamsBodySerializer,
		headers: {
			'Content-Type': 'application/x-www-form-urlencoded',
			...options?.headers
		},
		url: '/auth/login'
	});
};

/**
 * Auth:Cookie.Logout
 */
export const authCookieLogoutAuthLogoutPost = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		AuthCookieLogoutAuthLogoutPostResponse,
		AuthCookieLogoutAuthLogoutPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/logout'
	});
};

/**
 * Register:Register
 */
export const registerRegisterAuthRegisterPost = <ThrowOnError extends boolean = false>(
	options: Options<RegisterRegisterAuthRegisterPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		RegisterRegisterAuthRegisterPostResponse,
		RegisterRegisterAuthRegisterPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/register'
	});
};

/**
 * Reset:Forgot Password
 */
export const resetForgotPasswordAuthForgotPasswordPost = <ThrowOnError extends boolean = false>(
	options: Options<ResetForgotPasswordAuthForgotPasswordPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		ResetForgotPasswordAuthForgotPasswordPostResponse,
		ResetForgotPasswordAuthForgotPasswordPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/forgot-password'
	});
};

/**
 * Reset:Reset Password
 */
export const resetResetPasswordAuthResetPasswordPost = <ThrowOnError extends boolean = false>(
	options: Options<ResetResetPasswordAuthResetPasswordPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		ResetResetPasswordAuthResetPasswordPostResponse,
		ResetResetPasswordAuthResetPasswordPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/reset-password'
	});
};

/**
 * Verify:Request-Token
 */
export const verifyRequestTokenAuthRequestVerifyTokenPost = <ThrowOnError extends boolean = false>(
	options: Options<VerifyRequestTokenAuthRequestVerifyTokenPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		VerifyRequestTokenAuthRequestVerifyTokenPostResponse,
		VerifyRequestTokenAuthRequestVerifyTokenPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/request-verify-token'
	});
};

/**
 * Verify:Verify
 */
export const verifyVerifyAuthVerifyPost = <ThrowOnError extends boolean = false>(
	options: Options<VerifyVerifyAuthVerifyPostData, ThrowOnError>
) => {
	return (options?.client ?? client).post<
		VerifyVerifyAuthVerifyPostResponse,
		VerifyVerifyAuthVerifyPostError,
		ThrowOnError
	>({
		...options,
		url: '/auth/verify'
	});
};

/**
 * Auth
 */
export const authResearchAuthGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		AuthResearchAuthGetResponse,
		AuthResearchAuthGetError,
		ThrowOnError
	>({
		...options,
		url: '/research/auth/'
	});
};
